sourceSets {
    integTest {
        compileClasspath += sourceSets.main.output + sourceSets.main.runtimeClasspath + sourceSets.testBase.runtimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

task integTest(type: Test) {
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    description = 'Runs the integration tests.'

    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
}

gradlePlugin {
    testSourceSets(*(testSourceSets as List), sourceSets.integTest)
}

check.dependsOn integTest

gradle.projectsEvaluated {
    def quickTasks = []

    gradle.rootProject.allprojects.each { project ->
        quickTasks.addAll(project.tasks.findAll { it.name == 'test' })
        quickTasks.addAll(project.tasks.withType(FindBugs))
        quickTasks.addAll(project.tasks.withType(Pmd))
        quickTasks.addAll(project.tasks.withType(CodeNarc))
    }

    quickTasks.each { task ->
        project.tasks.integTest.shouldRunAfter task
    }
}
